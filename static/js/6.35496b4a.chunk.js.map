{"version":3,"sources":["components/ListItem/ListItem.tsx","components/ListItem/ListItem.module.scss","components/ViewPlaylist/ViewPlaylist.tsx"],"names":["ListItem","song","index","useState","onHover","setOnHover","useContext","CurrentSong","currentSong","setCurrentSong","PlayingStatus","playing","setPlaying","className","styles","onMouseEnter","onMouseLeave","id","onClick","bar","cover","src","process","name","artist","rest","forSong","module","exports","ViewPlaylist","data","setData","useEffect","a","axios","get","headers","Authorization","localStorage","getItem","resp","fetchData","map"],"mappings":"8MAuEeA,IAzDmB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAAY,EACvBC,oBAAS,GADc,mBAC9CC,EAD8C,KACrCC,EADqC,OAEbC,qBAAWC,KAA3CC,EAF6C,EAE7CA,YAAaC,EAFgC,EAEhCA,eAFgC,EAGrBH,qBAAWI,KAAnCC,EAH6C,EAG7CA,QAASC,EAHoC,EAGpCA,WAEjB,OACE,sBACEC,UAAWC,IAAO,aAClBC,aAAc,kBAAMV,GAAW,IAC/BW,aAAc,kBAAMX,GAAW,IAHjC,UAKE,qBAAKQ,UAAWC,IAAOG,GAAvB,SACIb,EAcA,mCACIO,GAAWH,IAAgBP,EAQ3B,cAAC,IAAD,CACEiB,QAAS,WACG,OAAVN,QAAU,IAAVA,MAAa,MATjB,cAAC,IAAD,CACEM,QAAS,WACO,OAAdT,QAAc,IAAdA,KAAiBR,GACP,OAAVW,QAAU,IAAVA,MAAa,QAlBrB,mCACGJ,IAAgBP,GAAQU,EACvB,gCACE,qBAAKE,UAAWC,IAAOK,MACvB,qBAAKN,UAAWC,IAAOK,MACvB,qBAAKN,UAAWC,IAAOK,MACvB,qBAAKN,UAAWC,IAAOK,SAGzBjB,MAsBR,cAAC,IAAD,CACEW,UAAWC,IAAOM,MAClBC,IAAG,UAAKC,6CAAL,YAAuCrB,EAAKmB,SAEjD,sBAAKP,UAAWC,IAAO,aAAvB,UACE,qBAAKD,UAAWC,IAAOS,KAAvB,SAA8BtB,EAAKsB,OACnC,qBAAKV,UAAWC,IAAOU,OAAvB,SAAgCvB,EAAKuB,YAEvC,qBAAKX,UAAWC,IAAOW,KAAvB,UAA+BrB,GAAW,cAAC,IAAD,CAAYsB,QAASzB,W,oBCjErE0B,EAAOC,QAAU,CAAC,YAAY,4BAA4B,GAAK,qBAAqB,IAAM,sBAAsB,MAAQ,wBAAwB,MAAQ,wBAAwB,YAAY,4BAA4B,KAAO,uBAAuB,OAAS,yBAAyB,KAAO,yB,mJCsChRC,UA/BgB,WAAM,MAGX1B,mBAAiB,IAHN,mBAG5B2B,EAH4B,KAGtBC,EAHsB,KAqBnC,OAhBAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACGC,IAAMC,IAAN,UAAab,6CAAb,aAAwD,CACzEc,QAAS,CAAEC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,eAF3C,OACVC,EADU,OAIhBT,EAAQS,EAAKV,MAJG,2CAAH,qDAOfW,KACC,IAQD,qBAAK5B,UAAU,gBAAf,8BACGiB,EAAKY,KAAI,SAACzC,EAAMC,GAEf,OAAO,cAAC,IAAD,CAAUD,KAAMA,EAAMC,MAAOA,EAAQ,EAArC,qCAAqDA","file":"static/js/6.35496b4a.chunk.js","sourcesContent":["import { useContext, useState } from 'react';\nimport ImageFadeIn from 'react-image-fade-in';\nimport CurrentSong from '../../context/CurrentSong';\nimport PlayingStatus from '../../context/PlayingStatus';\nimport Song from '../../types/Song';\nimport { PauseFill, PlayFill } from '../icons';\nimport LikeButton from '../LikeButton/LikeButton';\nimport styles from './ListItem.module.scss';\n\ninterface Props {\n  song: Song;\n  index: number;\n}\n\nconst ListItem: React.FC<Props> = ({ song, index }) => {\n  const [onHover, setOnHover] = useState(false);\n  const { currentSong, setCurrentSong } = useContext(CurrentSong);\n  const { playing, setPlaying } = useContext(PlayingStatus);\n\n  return (\n    <div\n      className={styles['list-item']}\n      onMouseEnter={() => setOnHover(true)}\n      onMouseLeave={() => setOnHover(false)}\n    >\n      <div className={styles.id}>\n        {!onHover ? (\n          <>\n            {currentSong === song && playing ? (\n              <div>\n                <div className={styles.bar} />\n                <div className={styles.bar} />\n                <div className={styles.bar} />\n                <div className={styles.bar} />\n              </div>\n            ) : (\n              index\n            )}\n          </>\n        ) : (\n          <>\n            {!playing || currentSong !== song ? (\n              <PlayFill\n                onClick={() => {\n                  setCurrentSong?.(song);\n                  setPlaying?.(true);\n                }}\n              />\n            ) : (\n              <PauseFill\n                onClick={() => {\n                  setPlaying?.(false);\n                }}\n              />\n            )}\n          </>\n        )}\n      </div>\n      <ImageFadeIn\n        className={styles.cover}\n        src={`${process.env.REACT_APP_BASE_URL}/${song.cover}`}\n      />\n      <div className={styles['song-info']}>\n        <div className={styles.name}>{song.name}</div>\n        <div className={styles.artist}>{song.artist}</div>\n      </div>\n      <div className={styles.rest}>{!onHover || <LikeButton forSong={song} />}</div>\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"ListItem_list-item__U0_fa\",\"id\":\"ListItem_id__3of3P\",\"bar\":\"ListItem_bar__2poB4\",\"sound\":\"ListItem_sound__3HxqT\",\"cover\":\"ListItem_cover__3uQkI\",\"song-info\":\"ListItem_song-info__2zrPS\",\"name\":\"ListItem_name__3V0JO\",\"artist\":\"ListItem_artist__bOZwr\",\"rest\":\"ListItem_rest__3P-8Z\"};","import { useEffect, useState } from 'react';\nimport './ViewPlaylist.scoped.scss';\n// import queryString from 'query-string';\n// import { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport ListItem from '../ListItem/ListItem';\nimport Song from '../../types/Song';\n\nconst ViewPlaylist: React.FC = () => {\n  // const location = useLocation();\n\n  const [data, setData] = useState<Song[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const resp = await axios.get(`${process.env.REACT_APP_BASE_URL}/v1/music`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('__TOKEN')}` },\n      });\n      setData(resp.data);\n    };\n\n    fetchData();\n  }, []);\n\n  // useEffect(() => {\n  //   const query = queryString.parse(location.search);\n  //   console.log(query);\n  // }, [location]);\n\n  return (\n    <div className=\"view-playlist\">\n      {data.map((song, index) => {\n        // eslint-disable-next-line react/no-array-index-key\n        return <ListItem song={song} index={index + 1} key={`list-${index}`} />;\n      })}\n    </div>\n  );\n};\n\nexport default ViewPlaylist;\n"],"sourceRoot":""}